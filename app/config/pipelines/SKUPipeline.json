{
  "name": "SKU",
  "description": "Downloads data and publishes it to an MQTT topic and alerts EdgeX.",
  "timeoutSeconds": 60,
  "trigger": {
    "interval": {
      "seconds": 120
    }
  },
  "tasks": {
    "pipelineConfig": {
      "type": "secret",
      "raw": {
        "name": "skuPipelineConfig.json"
      },
      "errorIfEmpty": true
    },
    "coreDataConfig": {
      "type": "http",
      "description": "Requests the Core Data port number from the service discovery service.",
      "raw": {
        "method": "GET"
      },
      "links": {
        "url": { "from": "pipelineConfig", "elem": "coreDataLookup" }
      },
      "errorOnEmpty": true
    },
    "coreDataURL": {
      "type": "template",
      "description": "Parses the output from the service discovery request to extract the port number.",
      "raw": {
        "template": "createEdgeXURL",
        "namespaces": [ "edgex" ],
        "initialData": {
          "api": "/api/v1/event"
        }
      },
      "links": {
        "serviceConfigs": { "from": "coreDataConfig" }
      }
    },
    "mqttCredentials": {
      "type": "secret",
      "raw": {
        "name": "mqttCredentials.txt"
      },
      "errorIfEmpty": true
    },
    "splitMQTTCreds": {
      "type": "template",
      "raw": {
        "namespaces": [ "mqttcreds" ],
        "template": "splitMQTTCreds"
      },
      "links": {
        "fileData": { "from": "mqttCredentials" }
      },
      "disableResultLog": true
    },
    "lastUpdated": {
      "type": "get",
      "raw": {
        "source": "memoryStore",
        "name": "skus.lastUpdated",
        "default": 0
      }
    },
    "proxyRequest": {
      "type": "template",
      "description": "Creates a request for the Cloud Connector to get the data",
      "raw": {
        "template": "proxyCCRequest",
        "namespaces": [ "cloudConn", "ASNSKU" ],
        "initialData": {
          "method": "GET"
        }
      },
      "links": {
        "oAuthCreds": { "from": "pipelineConfig", "elem": "oauthConfig" },
        "lastUpdated": { "from": "lastUpdated" },
        "baseURL": { "from": "pipelineConfig", "elem": "dataEndpoint" },
        "siteID": { "from": "pipelineConfig", "elem": "siteID" }
      }
    },
    "incomingData": {
      "type": "http",
      "raw": {
        "maxRetries": 3,
        "method": "POST"
      },
      "links": {
        "body": { "from": "proxyRequest" },
        "url": { "from": "pipelineConfig", "elem": "cloudConnEndpoint" }
      }
    },
    "cloudConnResponse": {
      "type": "template",
      "raw": {
        "template": "extractCCResponse",
        "namespaces": [ "cloudConn", "ASNSKU" ]
      },
      "links": {
        "ccResponse": { "from": "incomingData" }
      },
      "stopOnEmpty": true
    },
    "dataSchema": {
      "type": "secret",
      "links": {
        "name": { "from": "pipelineConfig", "elem": "dataSchemaFile" }
      },
      "errorIfEmpty": true
    },
    "dataValidation": {
      "type": "validation",
      "links": {
        "content": { "from": "cloudConnResponse" },
        "schema": { "from": "dataSchema" }
      }
    },
    "publishToIMA": {
      "type": "mqtt",
      "ifSuccessful": [ "dataValidation" ],
      "links": {
        "message": { "from": "cloudConnResponse" },
        "username": { "from": "splitMQTTCreds", "elem": "username" },
        "password": { "from": "splitMQTTCreds", "elem": "password" },
        "endpoint": { "from": "pipelineConfig", "elem": "mqttEndpoint" },
        "topics": { "from": "pipelineConfig", "elem": "mqttTopics" }
      },
      "raw": {
        "encrypt": true,
        "skipCertVerify": true,
        "timeoutSecs": 100
      }
    },
    "edgeXEvent": {
      "type": "template",
      "raw": {
        "template": "edgeXEvent",
        "namespaces": [ "edgex", "ASNSKU" ],
        "initialData": {
          "dataType": "SKUs"
        }
      },
      "links": {
        "siteID": { "from": "pipelineConfig", "elem": "siteID" }
      }
    },
    "sendEdgeXEvent": {
      "type": "http",
      "ifSuccessful": [ "publishToIMA" ],
      "raw": {
        "method": "POST"
      },
      "links": {
        "body": { "from": "edgeXEvent" },
        "url": { "from": "coreDataURL" }
      }
    },
    "updateLastCompleted": {
      "type": "put",
      "raw": {
        "name": "skus.lastUpdated"
      },
      "links": {
        "value": {
          "from": "sendEdgeXEvent",
          "using": "status",
          "elem": "CompletedAt"
        }
      }
    }
  }
}
